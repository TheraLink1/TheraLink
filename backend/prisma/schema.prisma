generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}
enum ApplicationStatus {
  Pending
  Denied
  Approved
}
enum PaymentStatus {
  Pending
  Paid
  PartiallyPaid
  Overdue
}

model Client {
  id          Int    @id @default(autoincrement())
  cognitoId   String @unique
  name        String
  email       String
  phoneNumber String
  history       String?
  appointments  Appointment[]
  payments      Payment[]
}

model Psychologist {
    id          Int    @id @default(autoincrement())
  cognitoId   String @unique
  name        String
  email       String
  phoneNumber String
  locationId     Int
  location       Location      @relation(fields: [locationId], references: [id])
  appointments   Appointment[]
}

model Location {
  id            Int                                   @id @default(autoincrement())
  street        String                                @db.VarChar(100)
  city          String                                @db.VarChar(100)
  houseNumber   String                                @db.VarChar(100)
  postalCode    String                                @db.VarChar(6)
  coordinates   Unsupported("geography(Point, 4326)")
  psychologists Psychologist[] 
}

model Appointment {
  id              Int          @id @default(autoincrement())
  clientCognitoId String
  client          Client      @relation(fields: [clientCognitoId], references: [cognitoId])
  psychologistId  Int
  psychologist    Psychologist @relation(fields: [psychologistId], references: [id])
  meetingLink     String       
  date            DateTime
  Status          ApplicationStatus
  payment         Payment?
}

model Payment {
  id              Int         @id @default(autoincrement())
  appointmentId   Int         @unique
  appointment     Appointment @relation(fields: [appointmentId], references: [id])
  clientCognitoId String?
  client          Client?     @relation(fields: [clientCognitoId], references: [cognitoId])
  paymentDate     DateTime
  isPaid          Boolean
  amount          Int
}
