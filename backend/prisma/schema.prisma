generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

model User {
  id            Int          @id @default(autoincrement())
  role          String       @db.VarChar(20)
  email         String       @unique @db.VarChar(100)
  password      String       @db.VarChar(100)
  firstName     String       @db.VarChar(100)
  lastName      String       @db.VarChar(100)
  phone         String       @db.VarChar(11)
  dateOfBirth   DateTime
  client        Client?
  psychologist  Psychologist?

  @@map("Uzytkownik")
}

model Client {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int          @unique
  history     String?
  appointments Appointment[]
  payments    Payment[]

  @@map("Klient")
}

model Psychologist {
  id             Int           @id @default(autoincrement())
  user           User          @relation(fields: [userId], references: [id])
  userId         Int           @unique
  specialization String        @db.VarChar(100)
  price          Decimal       @db.Money
  availability   DateTime
  location       Location      @relation(fields: [locationId], references: [id])
  locationId     Int
  appointments   Appointment[]

  @@map("Psycholog")
}

model Location {
  id           Int           @id @default(autoincrement())
  street       String        @db.VarChar(100)
  city         String        @db.VarChar(100)
  houseNumber  String        @db.VarChar(100)
  postalCode   String        @db.VarChar(6)
  coordinates  Unsupported("geography(Point, 4326)")
  psychologists Psychologist[]

  @@map("Lokalizacja")
}

model Appointment {
  id             Int           @id @default(autoincrement())
  client         Client        @relation(fields: [clientId], references: [id])
  clientId       Int
  psychologist   Psychologist  @relation(fields: [psychologistId], references: [id])
  psychologistId Int
  meetingLink    String        @db.VarChar(400)
  date           DateTime
  isConfirmed    Boolean
  payment        Payment?

  @@map("Wizyta")
}

model Payment {
  id            Int         @id @default(autoincrement())
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId Int         @unique
  client        Client      @relation(fields: [clientId], references: [id])
  clientId      Int
  paymentDate   DateTime
  isPaid        Boolean
  amount        Int

  @@map("Platnosc")
}